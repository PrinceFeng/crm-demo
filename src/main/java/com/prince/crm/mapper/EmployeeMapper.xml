<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.prince.crm.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.prince.crm.domain.Employee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="realname" property="realname" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="inputtime" property="inputtime" jdbcType="DATE"/>
        <result column="state" property="state" jdbcType="BIT"/>
        <result column="admin" property="admin" jdbcType="BIT"/>
        <association property="dept" javaType="com.prince.crm.domain.Department" columnPrefix="d_">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from employee
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.prince.crm.domain.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee (username, realname, password, 
          tel, email, dept_id,
          inputtime, state, admin)
        values (#{username}, #{realname}, #{password},
          #{tel}, #{email}, #{dept.id},
          #{inputtime}, #{state}, #{admin})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.prince.crm.domain.Employee">
        update employee
        set username = #{username},
            realname = #{realname},
            password = #{password},
            tel = #{tel},
            email = #{email},
            dept_id = #{dept.id},
            inputtime = #{inputtime},
            state = #{state},
            admin = #{admin}
        where id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select id, username, realname, password, tel, email, dept_id, inputtime, state, admin
        from employee
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, username, realname, password, tel, email, dept_id, inputtime, state, admin
        from employee
    </select>
    
    <!-- 用户登录 -->
    <select id="getUserForLogin" resultMap="BaseResultMap">
        select * from employee WHERE username = #{username} and password = #{password}
    </select>
    
    <sql id="where_sql">
        <where>
            <if test="keyWord != null">
                (
                username like concat('%', #{keyWord}, '%')
                )
            </if>
        </where>
    </sql>
    
    <!-- 查询总数 -->
    <select id="getTotalEmployees" resultType="int">
        select count(*) from employee
        <include refid="where_sql"/>
    </select>
    
    <!-- 查询列表（分页、条件查询） -->
    <select id="getEmployeeList" resultMap="BaseResultMap">
        select
        e.id, e.username, e.realname, e.tel, e.email, e.inputtime, e.state, e.admin,
        d.id d_id, d.name d_name
        from employee e left join department d ON (e.id = d.id)
        <include refid="where_sql"/>
        <if test="page != null">
            limit #{start}, #{rows}
        </if>
    </select>
    
    <!-- 更改员工状态为离职 -->
    <update id="updateState" parameterType="long">
        update employee set state = 0 where id = #{id}
    </update>

</mapper>